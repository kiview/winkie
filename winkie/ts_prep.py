# AUTOGENERATED! DO NOT EDIT! File to edit: 04_ts_prep.ipynb (unless otherwise specified).

__all__ = ['build_timeseries']

# Cell
import pandas as pd

from scipy import stats
import numpy as np
from tqdm.notebook import trange

def build_timeseries(df, features, timeslice_length, window_step_size=1, ignore_label='not_defined'):
    "Split the data in `df` into timeseries segments of length `timeslice_length` containing given `features`."

    segments = []
    labels = []
    for i in trange(0, len(df) - timeslice_length + 1, window_step_size):
        s = []
        i_end = i + timeslice_length
        for f in features:
            s.append(df[f[0], f[1]].values[i:i_end])

        # identify label
        dominant_label = stats.mode(df['behavior'][i:i_end])[0][0]

        if dominant_label != ignore_label:
            segments.append(s)
            labels.append(dominant_label)

    orderd_labels = sorted(list(set(labels))) # pd.get_dummies orders alphabetically, needed for decoding
    df_encoded_labels = pd.get_dummies(labels)
    label_vector = np.asarray(df_encoded_labels, dtype = np.float32)

    return np.asarray(segments), label_vector, orderd_labels